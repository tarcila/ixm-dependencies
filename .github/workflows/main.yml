name: Build and Release
on:
  push:
    branches: "**"
    tags: "**"
  pull_request:
    types: [opened, edited]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu, windows, macOS]
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Checking out source tree
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Setting up Vcpkg
      uses: dldt/setup-vcpkg@v1.0.0
      id: vcpkg
    - name: Uploading artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.os }}-${{ github.sha }}
        path: ${{ steps.vcpkg.outputs.export }}

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Creating release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: ${{ contains(github.ref, '-') }}

  upload-assets:
    name: Upload assets
    needs: [release]
    strategy:
      matrix:
        os: [ubuntu, windows, macOS]
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Getting release information
      id: get-release-info
      uses: dldt/get-release-info@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-name: ${{ github.ref }}
    - name: Downloading artifacts
      uses: actions/download-artifact@v1
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.os }}-${{ github.sha }}
        path: ${{ github.event.repository.name }}-${{ matrix.os }}-${{ steps.get-release-info.outputs.tag-name }}
    - name: Creating artifact archives
      run: |
        $in = "${{ github.event.repository.name }}-${{ matrix.os }}-${{ steps.get-release-info.outputs.tag-name }}"
        $out = "$in.zip"
        if ("${{ matrix.os }}" -Eq "windows") {
          7z a $out $in
        } else {
          zip -9 -r $out $in
        }
      shell: pwsh
    - name: Uploading release assets
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get-release-info.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}-${{ matrix.os }}-${{ steps.get-release-info.outputs.tag-name }}.zip
        asset_name: ${{ github.event.repository.name }}-${{ matrix.os }}-${{ steps.get-release-info.outputs.tag-name }}.zip
        asset_content_type: application/zip
        asset_label: Artifacts for ${{ matrix.os }}
